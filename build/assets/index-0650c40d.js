import{c as B,_ as I}from"./BeefyV2AppMulticall-a6811ee2.js";import{f3 as V,f4 as g,ae as b,aD as p,bb as u}from"./index-fc282d72.js";const v=I;class S{constructor(t,a){this.web3=t,this.chain=a}async fetchAllContractData(t,a,s,e){const r=new this.web3.eth.Contract(v,this.chain.appMulticallContractAddress),c=V(this.chain.id),A=B(e,c),y=B(s,c),k=B(a,c),m=[];A.forEach(o=>{m.push({method:r.methods.getBoostInfo(o.map(n=>n.earnContractAddress)).call,params:{from:"0x0000000000000000000000000000000000000000"}})}),k.forEach(o=>{m.push({method:r.methods.getVaultInfo(o.map(n=>n.earnContractAddress)).call,params:{from:"0x0000000000000000000000000000000000000000"}})}),y.forEach(o=>{m.push({method:r.methods.getGovVaultInfo(o.map(n=>n.earnContractAddress)).call,params:{from:"0x0000000000000000000000000000000000000000"}})});const f=await g(this.web3,m),d={boosts:[],govVaults:[],standardVaults:[]};let i=0;for(const o of A){const n=f[i].map((l,h)=>this.boostFormatter(t,l,o[h]));d.boosts=d.boosts.concat(n),i++}for(const o of k){const n=f[i].map((l,h)=>this.standardVaultFormatter(t,l,o[h]));d.standardVaults=d.standardVaults.concat(n),i++}for(const o of y){const n=f[i].map((l,h)=>this.govVaultFormatter(t,l,o[h]));d.govVaults=d.govVaults.concat(n),i++}return d}standardVaultFormatter(t,a,s){const e=b(t,s.id),r=p(t,e.chainId,e.earnContractAddress),c=p(t,e.chainId,e.depositTokenAddress);return{id:s.id,balance:new u(a.balance).shiftedBy(-c.decimals),pricePerFullShare:new u(a.pricePerFullShare).shiftedBy(-r.decimals),strategy:a.strategy}}govVaultFormatter(t,a,s){const e=b(t,s.id),r=p(t,e.chainId,e.depositTokenAddress);return{id:s.id,totalSupply:new u(a.totalSupply).shiftedBy(-r.decimals)}}boostFormatter(t,a,s){const e=p(t,s.chainId,s.earnedTokenAddress),r=b(t,s.vaultId),c=p(t,r.chainId,r.depositTokenAddress);return{id:s.id,totalSupply:new u(a.totalSupply).shiftedBy(-c.decimals),rewardRate:new u(a.rewardRate).shiftedBy(-e.decimals),periodFinish:a.periodFinish==="0"?null:new Date(parseInt(a.periodFinish)*1e3),isPreStake:a.isPreStake}}}export{S as ContractDataAPI};
